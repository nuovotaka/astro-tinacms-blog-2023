---
import type { Frontmatter } from '../../config'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import Layout from '../../layouts/blog.astro'

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  let posts = await getCollection('blog', ({ data }) => {
    return data.draft !== true
  })
  posts = posts.sort((a, b) => +b.data.publishDate - +a.data.publishDate)
  return posts.map((post, i) => ({
    params: { slug: post.slug },
    props: {
      post,
      prev: i > 0 && posts[i - 1],
      next: i < posts.length - 1 && posts[i + 1]
    }
  }))
}

type Props = {
  post: CollectionEntry<'blog'>
  prev: CollectionEntry<'blog'>
  next: CollectionEntry<'blog'>
}

// 2. When its time to render, you can get the entry directly from the prop
const { post, prev, next } = Astro.props

// @ts-ignore
const { Content, remarkPluginFrontmatter } = await post.render()
let fm = post.data
const rfm = remarkPluginFrontmatter as Frontmatter
if (rfm) {
  fm.minutesRead = rfm.minutesRead
  fm.extra = rfm.extra
}
---

<Layout frontmatter={fm} {prev} {next}>
  <Content />
</Layout>
