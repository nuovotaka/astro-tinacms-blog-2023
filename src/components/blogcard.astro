---
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import Img from './img.astro'
import { Icon } from 'astro-icon'
import Categories from '../components/categories.astro'
import Tags from '../components/tags.astro'
import Image from 'astro/components/Image.astro'

export interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props

let cat = await getEntry('category', 'general')
if (post.data.categories) {
  cat = await getEntry(post.data.categories[0])
}
const image =
  post.data.coverSVG ||
  post.data.coverImage ||
  (post.data.images && post.data.images[0]) ||
  post.data.socialImage ||
  cat.data.coverSVG
let author = await getEntry('author', 'default')
if (post.data.author) {
  author = await getEntry(post.data.author)
}
---

<section class='p-4 md:w-1/2 lg:w-1/3'>
  <div
    class='border-1 h-full overflow-hidden rounded-lg border-gray-200 bg-white p-2 shadow-xl dark:border-gray-700 dark:bg-gray-800'
  >
    <a href={import.meta.env.BASE_URL + 'blog/' + post.slug}>
      <Image
        src={image}
        alt={post.data.title + ' featured image'}
        class='relative h-64 w-full overflow-hidden rounded-lg bg-orange-100 object-cover object-center group-hover:opacity-75 dark:bg-orange-800'
      />
      <p class='sr-only'>{post.data.title}</p>
    </a>
    <div class='p-6'>
      {post.data.categories && <Categories categories={post.data.categories} />}
      <a href={import.meta.env.BASE_URL + 'blog/' + post.slug}>
        <h1
          class='title-font mt-2 text-xl font-bold text-orange-600 hover:text-pink-600 dark:text-orange-300 dark:hover:text-pink-300'
        >
          {post.data.title}
        </h1>
      </a>
      <div class='flex flex-wrap items-center'>
        <span
          class='mr-3 inline-flex items-center border-r-2 border-orange-200 py-1 pr-3 text-xs leading-none text-gray-500 dark:border-orange-600 dark:text-gray-400'
        >
          <Icon class='mr-1 h-4 w-4' pack='heroicons-outline' name='calendar' />
          {
            post.data.publishDate
              .toLocaleDateString('ja-JP', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit'
              })
              .split('/')
              .join('-')
          }
        </span>
        {
          post.data.minutesRead && (
            <span class='mr-3 inline-flex items-center border-r-2 border-orange-200 py-1 pr-3 text-xs leading-none text-gray-500 dark:border-orange-600 dark:text-gray-400'>
              <Icon class='mr-1 h-4 w-4' pack='heroicons-outline' name='clock' />
              {post.data.minutesRead}
            </span>
          )
        }
        {
          post.data.author && (
            <span class='text-rosely1 dark:text-rosely7 inline-flex items-center text-xs leading-none'>
              <Icon class='mr-1 h-4 w-4' pack='heroicons-outline' name='user-circle' />
              {author.data.title}
            </span>
          )
        }
      </div>

      <p class='mt-3 text-sm italic text-gray-600 dark:text-gray-300'>
        {post.data.description}
      </p>
      <Tags tags={post.data.tags} />
    </div>
  </div>
</section>
